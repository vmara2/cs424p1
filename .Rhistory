installed.packages()[,1:2]
old.packages()
update.packages(ask=FALSE)
update.packages(ask = FALSE)
install.packages("shiny")
install.packages('rsconnect')
install.packages("rsconnect")
installed.packages()
install.packages("rsconnect")
rsconnect::setAccountInfo(name='valo-mara', token='72104D4E7B9F29FEBC98C57FB25E1886', secret='AIrWu0k10v+Q/F+pyFemlXzc/npND69IKDWsjOq8')
library(rsconnect)
rsconnect::deployApp('~/Documents/CS424/evlWeatherForR')
shiny::runApp('Documents/CS424/cs424p1')
runApp('Documents/CS424/cs424p1')
runApp('Documents/CS424/cs424p1')
runApp('Documents/CS424/cs424p1')
runApp('Documents/CS424/cs424p1')
runApp('Documents/CS424/cs424p1')
runApp('Documents/CS424/cs424p1')
runApp('Documents/CS424/cs424p1')
runApp('Documents/CS424/cs424p1')
runApp('Documents/CS424/cs424p1')
runApp('Documents/CS424/cs424p1')
usenergy <- read.table(file="annual_generation_state.csv", sep=",", header=TRUE)
# removing empty state identifier
usenergy <- usenergy[!(usenergy$STATE == "  "),]
# removing commas from number and converting to numeric values
usenergy$GENERATION..Megawatthours. <- as.numeric(gsub(",","", usenergy$GENERATION..Megawatthours.))
usenergy$STATE <- toupper(usenergy$STATE)
# remove any row with negative generation values
usenergy <- usenergy[(usenergy$GENERATION..Megawatthours. >= 0), ]
# since state is the only non-factor, convert to factor
usenergy$STATE <- factor(usenergy$STATE)
# removing the factors that were designated for removal
usenergy <- subset(usenergy, usenergy$ENERGY.SOURCE != "Other" & usenergy$ENERGY.SOURCE != "Other Gases" &
usenergy$ENERGY.SOURCE != "Other Biomass" & usenergy$ENERGY.SOURCE != "Pumped Storage")
# renaming some factor levels
levels(usenergy$ENERGY.SOURCE)[2] <- "Geo"
levels(usenergy$ENERGY.SOURCE)[3] <- "Hydro"
levels(usenergy$ENERGY.SOURCE)[4] <- "Gas"
levels(usenergy$ENERGY.SOURCE)[11] <- "Solar"
levels(usenergy$ENERGY.SOURCE)[14] <- "Wood"
# creating subset with Electric producers and Total energy source rows.
electric <- subset(usenergy, TYPE.OF.PRODUCER=="Total Electric Power Industry" & ENERGY.SOURCE=="Total")
# renaming columns for cleaner look
names(usenergy)[names(usenergy)=="TYPE.OF.PRODUCER"] <- "TYPE OF PRODUCER"
names(usenergy)[names(usenergy)=="ENERGY.SOURCE"] <- "ENERGY SOURCE"
names(usenergy)[names(usenergy)=="GENERATION..Megawatthours."] <- "GENERATION (MWh)"
years <- c(1990:2019)
clean_usenergy <- subset(usenergy, usenergy$`ENERGY SOURCE` != "Total")
rm(years)
setwd("Documents/CS424/cs424p1/")
usenergy <- read.table(file="annual_generation_state.csv", sep=",", header=TRUE)
# removing empty state identifier
usenergy <- usenergy[!(usenergy$STATE == "  "),]
# removing commas from number and converting to numeric values
usenergy$GENERATION..Megawatthours. <- as.numeric(gsub(",","", usenergy$GENERATION..Megawatthours.))
usenergy$STATE <- toupper(usenergy$STATE)
# remove any row with negative generation values
usenergy <- usenergy[(usenergy$GENERATION..Megawatthours. >= 0), ]
# since state is the only non-factor, convert to factor
usenergy$STATE <- factor(usenergy$STATE)
# removing the factors that were designated for removal
usenergy <- subset(usenergy, usenergy$ENERGY.SOURCE != "Other" & usenergy$ENERGY.SOURCE != "Other Gases" &
usenergy$ENERGY.SOURCE != "Other Biomass" & usenergy$ENERGY.SOURCE != "Pumped Storage")
# renaming some factor levels
levels(usenergy$ENERGY.SOURCE)[2] <- "Geo"
levels(usenergy$ENERGY.SOURCE)[3] <- "Hydro"
levels(usenergy$ENERGY.SOURCE)[4] <- "Gas"
levels(usenergy$ENERGY.SOURCE)[11] <- "Solar"
levels(usenergy$ENERGY.SOURCE)[14] <- "Wood"
# creating subset with Electric producers and Total energy source rows.
electric <- subset(usenergy, TYPE.OF.PRODUCER=="Total Electric Power Industry" & ENERGY.SOURCE=="Total")
# renaming columns for cleaner look
names(usenergy)[names(usenergy)=="TYPE.OF.PRODUCER"] <- "TYPE OF PRODUCER"
names(usenergy)[names(usenergy)=="ENERGY.SOURCE"] <- "ENERGY SOURCE"
names(usenergy)[names(usenergy)=="GENERATION..Megawatthours."] <- "GENERATION (MWh)"
years <- c(1990:2019)
clean_usenergy <- subset(usenergy, usenergy$`ENERGY SOURCE` != "Total")
View(usenergy)
View(clean_usenergy)
runApp()
runApp()
runApp()
ggplot(clean_usenergy, aes(x=YEAR, y=`GENERATION (MWh)`, color=`ENERGY SOURCE`)) + geom_line() + geom_point()
ggplot(clean_usenergy, aes(x=YEAR, y=`GENERATION (MWh)`, color=`ENERGY SOURCE`)) + geom_line() + geom_point()
ggplot(clean_usenergy, aes(x=YEAR, y=`GENERATION (MWh)`, color=`ENERGY SOURCE`)) + geom_line(stat="sum")
ggplot(clean_usenergy, aes(x=YEAR, y=`GENERATION (MWh)`, color=`ENERGY SOURCE`)) + geom_line(stat="count")
ggplot(clean_usenergy, aes(x=YEAR, y=`GENERATION (MWh)`, color=`ENERGY SOURCE`)) + geom_line(stat="count")
ggplot(clean_usenergy, aes(x=YEAR, y=`GENERATION (MWh)`, color=`ENERGY SOURCE`)) + geom_line(stat="identity")
ggplot(clean_usenergy, aes(x=YEAR, y=`GENERATION (MWh)`, color=`ENERGY SOURCE`)) + geom_line(stat="summary")
ggplot(clean_usenergy, aes(x=YEAR, y=`GENERATION (MWh)`, color=`ENERGY SOURCE`)) + geom_line(stat="summary", fun.y = "sum")
ggplot(clean_usenergy, aes(x=YEAR, y=`GENERATION (MWh)`, color=`ENERGY SOURCE`)) + geom_line(stat="summary", fun.x = "sum")
ggplot(clean_usenergy, aes(x=YEAR, y=`GENERATION (MWh)`, color=`ENERGY SOURCE`)) + geom_line(stat="function")
ggplot(clean_usenergy, aes(x=YEAR, y=`GENERATION (MWh)`, color=`ENERGY SOURCE`)) + geom_line(stat="function", function("sum"))
ggplot(clean_usenergy, aes(x=YEAR, y=`GENERATION (MWh)`, color=`ENERGY SOURCE`)) + geom_line(stat="function", fun.y("sum")
})
ggplot(clean_usenergy, aes(x=YEAR, y=`GENERATION (MWh)`, color=`ENERGY SOURCE`)) + geom_line(stat="function", "sum")
ggplot(clean_usenergy, aes(x=YEAR, y=`GENERATION (MWh)`, color=`ENERGY SOURCE`)) + geom_line(stat="function", sum())
ggplot(clean_usenergy, aes(x=YEAR, y=`GENERATION (MWh)`, color=`ENERGY SOURCE`)) + geom_line(stat="function")
ggplot(clean_usenergy, aes(x=YEAR, y=`GENERATION (MWh)`, color=`ENERGY SOURCE`)) + geom_line(stat="function", fun = "sum")
ggplot(clean_usenergy, aes(x=YEAR, y=`GENERATION (MWh)`, color=`ENERGY SOURCE`)) + geom_line(stat="sum")
ggplot(clean_usenergy, aes(x=YEAR, y=`GENERATION (MWh)`, color=`ENERGY SOURCE`)) + geom_line(stat="summary")
ggplot(clean_usenergy, aes(fill=`ENERGY SOURCE`, x=as.character(YEAR), y=`GENERATION (MWh)`)) + geom_bar(position='stack', stat = 'identity') +
scale_y_continuous(labels=scales::comma) +
labs(x="Year")
ggplot(clean_usenergy, aes(fill=`ENERGY SOURCE`, x=as.character(YEAR), y=`GENERATION (MWh)`)) + geom_bar(position='stack', stat = 'summary') +
scale_y_continuous(labels=scales::comma) +
labs(x="Year")
ggplot(clean_usenergy, aes(fill=`ENERGY SOURCE`, x=as.character(YEAR), y=`GENERATION (MWh)`)) + geom_bar(position='stack', stat = 'identity') +
scale_y_continuous(labels=scales::comma) +
labs(x="Year")
ggplot(clean_usenergy, aes(x=YEAR, y=`GENERATION (MWh)`, color=`ENERGY SOURCE`)) + geom_line(stat="summary", fun="sum")
ggplot(clean_usenergy, aes(x=YEAR, y=`GENERATION (MWh)`, color=`ENERGY SOURCE`)) + geom_line(stat="summary", fun="sum")
ggplot(clean_usenergy, aes(x=YEAR, y=`GENERATION (MWh)`, color=`ENERGY SOURCE`)) + geom_line(stat="summary", fun="mean")
ggplot(clean_usenergy, aes(x=YEAR, y=`GENERATION (MWh)`, color=`ENERGY SOURCE`)) + geom_line(stat="summary", fun="sum")
ggplot(clean_usenergy, aes(x=YEAR, y=`GENERATION (MWh)`, color=`ENERGY SOURCE`)) + geom_line(stat="summary", fun="sum") + geom_point()
ggplot(clean_usenergy, aes(fill=`ENERGY SOURCE`, x=as.character(YEAR), y=`GENERATION (MWh)`)) + geom_bar(position='stack', stat = 'identity') +
scale_y_continuous(labels=scales::comma) +
labs(x="Year")
View(clean_usenergy)
test <- subset(usenergy, usenergy$YEAR == 1990 & usenergy$`ENERGY SOURCE` == "Coal")
View(test)
sum(test$`GENERATION (MWh)`)
ggplot(clean_usenergy, aes(x=YEAR, y=`GENERATION (MWh)`, color=`ENERGY SOURCE`)) + geom_line(stat="summary", fun="sum") + geom_point()
ggplot(clean_usenergy, aes(x=YEAR, y=`GENERATION (MWh)`, color=`ENERGY SOURCE`, stat="summary", fun="sum")) + geom_line() + geom_point()
ggplot(clean_usenergy, aes(x=YEAR, y=`GENERATION (MWh)`, color=`ENERGY SOURCE`)) + geom_line(stat="summary", fun="sum") + geom_point(stat="summary", fun="sum")
ggplot(clean_usenergy, aes(x=YEAR, y=`GENERATION (MWh)`, color=`ENERGY SOURCE`)) + geom_line(stat="summary", fun="sum") + geom_point(stat="summary", fun="sum") +
scale_y_continuous(scales::comma)
ggplot(clean_usenergy, aes(x=YEAR, y=`GENERATION (MWh)`, color=`ENERGY SOURCE`)) + geom_line(stat="summary", fun="sum") + geom_point(stat="summary", fun="sum") +
scale_y_continuous(scales::comma)
ggplot(clean_usenergy, aes(x=YEAR, y=`GENERATION (MWh)`, color=`ENERGY SOURCE`)) + geom_line(stat="summary", fun="sum") + geom_point(stat="summary", fun="sum") +
scale_y_continuous(labels=scales::comma)
runApp()
ggplot(clean_usenergy, aes(fill=`ENERGY SOURCE`, x=YEAR, y=`GENERATION (MWh)`)) + geom_bar(position='stack', stat = 'identity') +
scale_y_continuous(labels=scales::comma) + geom_text(aes(label=`GENERATION (MWh)`))
ggplot(clean_usenergy, aes(fill=`ENERGY SOURCE`, x=YEAR, y=`GENERATION (MWh)`)) + geom_bar(position='stack', stat = 'identity') +
scale_y_continuous(labels=scales::comma) + geom_text(aes(label=`GENERATION (MWh)`), stat="sum")
ggplot(clean_usenergy, aes(fill=`ENERGY SOURCE`, x=YEAR, y=`GENERATION (MWh)`)) + geom_bar(position='stack', stat = 'identity') +
scale_y_continuous(labels=scales::comma) + geom_text(aes(label=`GENERATION (MWh)`), stat="summary", fun="sum")
ggplot(clean_usenergy, aes(fill=`ENERGY SOURCE`, x=YEAR, y=`GENERATION (MWh)`)) + geom_bar(position='stack', stat = 'identity') +
scale_y_continuous(labels=scales::comma) + geom_text(aes(label=`GENERATION (MWh)`), stat="summary")
ggplot(clean_usenergy, aes(fill=`ENERGY SOURCE`, x=YEAR, y=`GENERATION (MWh)`)) + geom_bar(position='stack', stat = 'identity') +
scale_y_continuous(labels=scales::comma) + geom_text(aes(label=`GENERATION (MWh)`))
ggplot(clean_usenergy, aes(fill=`ENERGY SOURCE`, x=YEAR, y=`GENERATION (MWh)`)) + geom_bar(position='stack', stat = 'identity') +
scale_y_continuous(labels=scales::comma) +
labs(x="Year")
View(usenergy)
ggplot(clean_usenergy, aes(x=YEAR, y+`GENERATION (MWh)`, color=`ENERGY SOURCE`)) + geom_line(stat="function")
