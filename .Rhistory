installed.packages()[,1:2]
old.packages()
update.packages(ask=FALSE)
update.packages(ask = FALSE)
install.packages("shiny")
install.packages('rsconnect')
install.packages("rsconnect")
installed.packages()
install.packages("rsconnect")
rsconnect::setAccountInfo(name='valo-mara', token='72104D4E7B9F29FEBC98C57FB25E1886', secret='AIrWu0k10v+Q/F+pyFemlXzc/npND69IKDWsjOq8')
library(rsconnect)
rsconnect::deployApp('~/Documents/CS424/evlWeatherForR')
shiny::runApp('Documents/CS424/cs424p1')
runApp('Documents/CS424/cs424p1')
setwd("Documents/CS424/cs424p1/")
us_energy <- read.table(file="annual_generation_state.csv", sep=",", header=TRUE)
# removing empty state identifier
us_energy <- us_energy[!(us_energy$STATE == "  "),]
# removing commas from number and converting to numeric values
us_energy$GENERATION..Megawatthours. <- as.numeric(gsub(",","", us_energy$GENERATION..Megawatthours.))
us_energy$STATE <- toupper(us_energy$STATE)
# remove any row with negative generation values
us_energy <- us_energy[(us_energy$GENERATION..Megawatthours. >= 0), ]
# since state is the only non-factor, convert to factor
us_energy$STATE <- factor(us_energy$STATE)
# removing the factors that were designated for removal
us_energy <- subset(us_energy, us_energy$ENERGY.SOURCE != "Other" & us_energy$ENERGY.SOURCE != "Other Gases" &
us_energy$ENERGY.SOURCE != "Other Biomass" & us_energy$ENERGY.SOURCE != "Pumped Storage")
# renaming some factor levels
levels(us_energy$ENERGY.SOURCE)[2] <- "Geo"
levels(us_energy$ENERGY.SOURCE)[3] <- "Hydro"
levels(us_energy$ENERGY.SOURCE)[4] <- "Gas"
levels(us_energy$ENERGY.SOURCE)[11] <- "Solar"
levels(us_energy$ENERGY.SOURCE)[14] <- "Wood"
# creating subset with Electric producers and Total energy source rows.
electric <- subset(us_energy, TYPE.OF.PRODUCER=="Total Electric Power Industry" & ENERGY.SOURCE=="Total")
# renaming columns for cleaner look
names(us_energy)[names(us_energy)=="TYPE.OF.PRODUCER"] <- "TYPE OF PRODUCER"
names(us_energy)[names(us_energy)=="ENERGY.SOURCE"] <- "ENERGY SOURCE"
names(us_energy)[names(us_energy)=="GENERATION..Megawatthours."] <- "GENERATION (MWh)"
View(us_energy)
View(us_energy)
agg <- aggregate(us_energy, by=list(us_energy$YEAR, us_energy$`ENERGY SOURCE`), FUN=sum)
agg <- aggregate(us_energy, by=list(us_energy$YEAR, us_energy$`ENERGY SOURCE`), FUN="sum")
agg <- aggregate(us_energy, by=list(us_energy$YEAR, us_energy$`ENERGY SOURCE`), FUN=mean)
View(agg)
agg <- aggregate(us_energy, by=list(us_energy$`ENERGY SOURCE`), FUN=sum)
View(agg)
rm(agg)
agg <- aggregate(`GENERATION (MWh)`~YEAR+`ENERGY SOURCE`, us_energy, sum)
View(agg)
agg <- aggregate(`GENERATION (MWh)`~YEAR+`ENERGY SOURCE`, clean_us_energy, sum)
new_us_energy <- subset(us_energy, us_energy$`ENERGY SOURCE` != "Total")
agg <- aggregate(`GENERATION (MWh)`~YEAR+`ENERGY SOURCE`, new_us_energy, sum)
transform(agg, percent = ave(`GENERATION (MWh)`, YEAR, FUN=prop.table))
agg <- transform(agg, percent = ave(`GENERATION (MWh)`, YEAR, FUN=prop.table))
View(agg)
ggplot(agg, aes(x=YEAR, y+`GENERATION (MWh)`, color=`ENERGY SOURCE`)) + geom_line()
ggplot(agg, aes(x=YEAR, y+`GENERATION (MWh)`, color=`ENERGY SOURCE`)) + geom_line()
ggplot(agg, aes(x=YEAR, y=`GENERATION (MWh)`, color=`ENERGY SOURCE`)) + geom_line()
runApp()
View(agg)
# calculating percentage of each energy source by year
agg <- aggregate(`GENERATION (MWh)`~YEAR+`ENERGY SOURCE`, new_us_energy, sum)
View(agg)
agg <- transform(agg, percent = ave(`GENERATION (MWh)`, YEAR, FUN=prop.table))
View(agg)
ggplot(agg, aes(x=YEAR, y=GENERATION..Megawatthours., color=ENERGY.SOURCE)) + geom_line()
View(agg)
ggplot(agg, aes(x=YEAR, y=GENERATION..MWh., color=ENERGY.SOURCE)) + geom_line()
runApp()
ggplot(agg, aes(x=YEAR, y=Percentage, color=ENERGY.SOURCE)) + geom_line()
ggplot(agg, aes(x=YEAR, y=Percent, color=ENERGY.SOURCE)) + geom_line()
View(agg)
agg <- transform(agg, Percent = ave(`GENERATION (MWh)`, YEAR, FUN=prop.table))
# calculating percentage of each energy source by year
agg <- aggregate(`GENERATION (MWh)`~YEAR+`ENERGY SOURCE`, new_us_energy, sum)
agg <- transform(agg, Percent = ave(`GENERATION (MWh)`, YEAR, FUN=prop.table))
View(agg)
ggplot(agg, aes(x=YEAR, y=Percent, color=ENERGY.SOURCE)) + geom_line()
runApp()
ggplot(agg, aes(x=YEAR, y=Percent, color=ENERGY.SOURCE)) + geom_line() + geom_point() +
scale_y_continuous(labels=scales::percent) +
labs(x="Year", y="Percent of Total Generation")
runApp()
runApp()
runApp()
